[ 2019-01-11T14:39:29+08:00 ] 223.72.56.102 /index.php/Admin/Index/index
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000213s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000262s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000288s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000079s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000102s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.004450s ]
INFO: [ view_parse ] --END-- [ RunTime:0.004474s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000122s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000141s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000338s ]
INFO: [ app_end ] --END-- [ RunTime:0.000358s ]

[ 2019-01-11T14:39:29+08:00 ] 223.72.56.102 /Admin/Index/welcome
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000207s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000263s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000290s ]
SQL: SHOW COLUMNS FROM `lxp_article` [ RunTime:0.0009s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article` LIMIT 1   [ RunTime:0.0003s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article` WHERE `is_delete` = 1 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article` WHERE `is_show` = 0 LIMIT 1   [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_chat` [ RunTime:0.0005s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_chat` LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_chat` WHERE `is_delete` = 1 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_chat` WHERE `is_show` = 0 LIMIT 1   [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_comment` [ RunTime:0.0005s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_comment` LIMIT 1   [ RunTime:0.0002s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000042s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000066s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.003625s ]
INFO: [ view_parse ] --END-- [ RunTime:0.003653s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000086s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000106s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000345s ]
INFO: [ app_end ] --END-- [ RunTime:0.000367s ]

[ 2019-01-11T14:39:31+08:00 ] 223.72.56.102 /Admin/Article/add
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000212s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000266s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000293s ]
SQL: SHOW COLUMNS FROM `lxp_article` [ RunTime:0.0008s ]
SQL: SHOW COLUMNS FROM `lxp_category` [ RunTime:0.0005s ]
SQL: SELECT * FROM `lxp_category` ORDER BY sort  [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_tag` [ RunTime:0.0004s ]
SQL: SELECT * FROM `lxp_tag`  [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0004s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 21 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 22 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 23 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 24 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 25 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 26 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 27 LIMIT 1   [ RunTime:0.0002s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000056s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000081s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.004146s ]
INFO: [ view_parse ] --END-- [ RunTime:0.004170s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000118s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000137s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000301s ]
INFO: [ app_end ] --END-- [ RunTime:0.000321s ]

[ 2019-01-11T14:42:29+08:00 ] 223.72.56.102 /Admin/Article/add
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000249s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000263s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000312s ]
SQL: SHOW COLUMNS FROM `lxp_article` [ RunTime:0.0009s ]
SQL: INSERT INTO `lxp_article` (`cid`,`title`,`author`,`keywords`,`description`,`is_original`,`is_top`,`is_show`,`content`,`click`,`is_delete`,`addtime`) VALUES ('35','Redis 简介','鹿晓鹏','','Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。Redis 与其他 key – value 缓存产品有以下三个特点：Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。Redis支持数据的备份，即mas','1','0','1','&lt;p style=&quot;border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 14px; font-family: &amp;quot;Microsoft YaHei&amp;quot;, 宋体, &amp;quot;Myriad Pro&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。&lt;br/&gt;Redis 与其他 key – value 缓存产品有以下三个特点：&lt;/p&gt;&lt;p&gt;Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。&lt;/p&gt;&lt;p&gt;Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。&lt;/p&gt;&lt;p&gt;Redis支持数据的备份，即master-slave模式的数据备份。&lt;/p&gt;&lt;h2 style=&quot;border: 0px; margin: -9px 0px 20px; padding: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-weight: normal; font-stretch: normal; font-size: 24px; line-height: 36px; font-family: &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Myriad Pro&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;Redis 优势&lt;/h2&gt;&lt;p&gt;性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。&lt;/p&gt;&lt;p&gt;丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。&lt;/p&gt;&lt;p&gt;原子 – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。&lt;/p&gt;&lt;p&gt;丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。&lt;/p&gt;&lt;h2 style=&quot;border: 0px; margin: -9px 0px 20px; padding: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-weight: normal; font-stretch: normal; font-size: 24px; line-height: 36px; font-family: &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Myriad Pro&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;Redis与其他key-value存储有什么不同？&lt;/h2&gt;&lt;p&gt;Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。&lt;/p&gt;&lt;p&gt;Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，应为数据量不能大于硬件内存。在内存数据库方面的另一个优点是， 相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。 同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。&lt;/p&gt;&lt;p&gt;Redis常用命令&lt;/p&gt;&lt;p&gt;1 连接操作命令&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;quit：关闭连接（connection）&lt;/p&gt;&lt;p&gt;auth：简单密码认证&lt;/p&gt;&lt;p&gt;help cmd： 查看cmd帮助，例如：help quit&lt;/p&gt;&lt;p&gt;2 持久化&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;save：将数据同步保存到磁盘&lt;/p&gt;&lt;p&gt;bgsave：将数据异步保存到磁盘&lt;/p&gt;&lt;p&gt;lastsave：返回上次成功将数据保存到磁盘的Unix时戳&lt;/p&gt;&lt;p&gt;shutdown：将数据同步保存到磁盘，然后关闭服务&lt;/p&gt;&lt;p&gt;3 远程服务控制&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;info：提供服务器的信息和统计&lt;/p&gt;&lt;p&gt;monitor：实时转储收到的请求&lt;/p&gt;&lt;p&gt;slaveof：改变复制策略设置&lt;/p&gt;&lt;p&gt;config：在运行时配置Redis服务器&lt;/p&gt;&lt;p&gt;4 对key操作的命令&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;exists(key)：确认一个key是否存在&lt;/p&gt;&lt;p&gt;del(key)：删除一个key&lt;/p&gt;&lt;p&gt;type(key)：返回值的类型&lt;/p&gt;&lt;p&gt;keys(pattern)：返回满足给定pattern的所有key&lt;/p&gt;&lt;p&gt;randomkey：随机返回key空间的一个&lt;/p&gt;&lt;p&gt;keyrename(oldname, newname)：重命名key&lt;/p&gt;&lt;p&gt;dbsize：返回当前数据库中key的数目&lt;/p&gt;&lt;p&gt;expire：设定一个key的活动时间（s）&lt;/p&gt;&lt;p&gt;ttl：获得一个key的活动时间&lt;/p&gt;&lt;p&gt;select(index)：按索引查询&lt;/p&gt;&lt;p&gt;move(key, dbindex)：移动当前数据库中的key到dbindex数据库&lt;/p&gt;&lt;p&gt;flushdb：删除当前选择数据库中的所有key&lt;/p&gt;&lt;p&gt;flushall：删除所有数据库中的所有key&lt;/p&gt;&lt;p&gt;5 String&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;set(key, value)：给数据库中名称为key的string赋予值value&lt;/p&gt;&lt;p&gt;get(key)：返回数据库中名称为key的string的value&lt;/p&gt;&lt;p&gt;getset(key, value)：给名称为key的string赋予上一次的value&lt;/p&gt;&lt;p&gt;mget(key1, key2,…, key N)：返回库中多个string的value&lt;/p&gt;&lt;p&gt;setnx(key, value)：添加string，名称为key，值为value&lt;/p&gt;&lt;p&gt;setex(key, time, value)：向库中添加string，设定过期时间time&lt;/p&gt;&lt;p&gt;mset(key N, value N)：批量设置多个string的值&lt;/p&gt;&lt;p&gt;msetnx(key N, value N)：如果所有名称为key i的string都不存在&lt;/p&gt;&lt;p&gt;incr(key)：名称为key的string增1操作&lt;/p&gt;&lt;p&gt;incrby(key, integer)：名称为key的string增加integer&lt;/p&gt;&lt;p&gt;decr(key)：名称为key的string减1操作&lt;/p&gt;&lt;p&gt;decrby(key, integer)：名称为key的string减少integer&lt;/p&gt;&lt;p&gt;append(key, value)：名称为key的string的值附加value&lt;/p&gt;&lt;p&gt;substr(key, start, end)：返回名称为key的string的value的子串&lt;/p&gt;&lt;p&gt;6 List&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;rpush(key, value)：在名称为key的list尾添加一个值为value的元素&lt;/p&gt;&lt;p&gt;lpush(key, value)：在名称为key的list头添加一个值为value的 元素&lt;/p&gt;&lt;p&gt;llen(key)：返回名称为key的list的长度&lt;/p&gt;&lt;p&gt;lrange(key, start, end)：返回名称为key的list中start至end之间的元素&lt;/p&gt;&lt;p&gt;ltrim(key, start, end)：截取名称为key的list&lt;/p&gt;&lt;p&gt;lindex(key, index)：返回名称为key的list中index位置的元素&lt;/p&gt;&lt;p&gt;lset(key, index, value)：给名称为key的list中index位置的元素赋值&lt;/p&gt;&lt;p&gt;lrem(key, count, value)：删除count个key的list中值为value的元素&lt;/p&gt;&lt;p&gt;lpop(key)：返回并删除名称为key的list中的首元素&lt;/p&gt;&lt;p&gt;rpop(key)：返回并删除名称为key的list中的尾元素&lt;/p&gt;&lt;p&gt;blpop(key1, key2,… key N, timeout)：lpop命令的block版本。&lt;/p&gt;&lt;p&gt;brpop(key1, key2,… key N, timeout)：rpop的block版本。&lt;/p&gt;&lt;p&gt;rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部&lt;/p&gt;&lt;p&gt;7 Set&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;sadd(key, member)：向名称为key的set中添加元素member&lt;/p&gt;&lt;p&gt;srem(key, member) ：删除名称为key的set中的元素member&lt;/p&gt;&lt;p&gt;spop(key) ：随机返回并删除名称为key的set中一个元素&lt;/p&gt;&lt;p&gt;smove(srckey, dstkey, member) ：移到集合元素&lt;/p&gt;&lt;p&gt;scard(key) ：返回名称为key的set的基数&lt;/p&gt;&lt;p&gt;sismember(key, member) ：member是否是名称为key的set的元素&lt;/p&gt;&lt;p&gt;sinter(key1, key2,…key N) ：求交集&lt;/p&gt;&lt;p&gt;sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合&lt;/p&gt;&lt;p&gt;sunion(key1, (keys)) ：求并集&lt;/p&gt;&lt;p&gt;sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合&lt;/p&gt;&lt;p&gt;sdiff(key1, (keys)) ：求差集&lt;/p&gt;&lt;p&gt;sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合&lt;/p&gt;&lt;p&gt;smembers(key) ：返回名称为key的set的所有元素&lt;/p&gt;&lt;p&gt;srandmember(key) ：随机返回名称为key的set的一个元素&lt;/p&gt;&lt;p&gt;8 Hash&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;hset(key, field, value)：向名称为key的hash中添加元素field&lt;/p&gt;&lt;p&gt;hget(key, field)：返回名称为key的hash中field对应的value&lt;/p&gt;&lt;p&gt;hmget(key, (fields))：返回名称为key的hash中field i对应的value&lt;/p&gt;&lt;p&gt;hmset(key, (fields))：向名称为key的hash中添加元素field&lt;/p&gt;&lt;p&gt;hincrby(key, field, integer)：将名称为key的hash中field的value增加integer&lt;/p&gt;&lt;p&gt;hexists(key, field)：名称为key的hash中是否存在键为field的域&lt;/p&gt;&lt;p&gt;hdel(key, field)：删除名称为key的hash中键为field的域&lt;/p&gt;&lt;p&gt;hlen(key)：返回名称为key的hash中元素个数&lt;/p&gt;&lt;p&gt;hkeys(key)：返回名称为key的hash中所有键&lt;/p&gt;&lt;p&gt;hvals(key)：返回名称为key的hash中所有键对应的value&lt;/p&gt;&lt;p&gt;hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value&lt;/p&gt;','0','0','1547188948') [ RunTime:0.0068s ]
SQL: SHOW COLUMNS FROM `lxp_article_pic` [ RunTime:0.0008s ]
SQL: INSERT INTO `lxp_article_pic` (`aid`,`path`) VALUES ('45','/Upload/image/ueditor/redis.jpg') [ RunTime:0.0019s ]
SQL: SHOW COLUMNS FROM `lxp_article` [ RunTime:0.0005s ]
SQL: SELECT `aid`,`addtime` FROM `lxp_article` WHERE `is_show` = 1 AND `is_delete` = 0 ORDER BY aid desc  [ RunTime:0.0003s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000032s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000058s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.004111s ]
INFO: [ view_parse ] --END-- [ RunTime:0.004139s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000085s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000103s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000356s ]
INFO: [ app_end ] --END-- [ RunTime:0.000377s ]

[ 2019-01-11T14:42:30+08:00 ] 223.72.56.102 /Admin/Article/index
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000213s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000277s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000304s ]
SQL: SHOW COLUMNS FROM `lxp_article` [ RunTime:0.0008s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article` WHERE `is_delete` = 0 LIMIT 1   [ RunTime:0.0003s ]
SQL: SELECT * FROM `lxp_article` WHERE `is_delete` = 0 ORDER BY addtime desc LIMIT 0,15   [ RunTime:0.0027s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0005s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0004s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '45'  [ RunTime:0.0003s ]
SQL: SHOW COLUMNS FROM `lxp_article_pic` [ RunTime:0.0004s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 45 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_category` [ RunTime:0.0004s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 35  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '44'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 44 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 34  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '43'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 43 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 32  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '41'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 41 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 34  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '40'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 40 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 34  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '39'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 39 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 34  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '38'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 38 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 32  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '42'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 42 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 34  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '37'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 37 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 35  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '36'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 36 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 35  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '35'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 35 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 32  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '34'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 34 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 34  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '33'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 33 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 34  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '32'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 32 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 32  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '31'  [ RunTime:0.0002s ]
SQL: SELECT `path` FROM `lxp_article_pic` WHERE `aid` = 31 ORDER BY ap_id asc LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT `cid`,`cid`,`cname` FROM `lxp_category` WHERE `cid` = 32  [ RunTime:0.0002s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000046s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000069s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.006652s ]
INFO: [ view_parse ] --END-- [ RunTime:0.006678s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000090s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000110s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000336s ]
INFO: [ app_end ] --END-- [ RunTime:0.000363s ]

[ 2019-01-11T14:42:34+08:00 ] 223.72.56.102 /Admin/Article/edit/aid/45
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000217s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000261s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000293s ]
SQL: SHOW COLUMNS FROM `lxp_article` [ RunTime:0.0010s ]
SQL: SELECT * FROM `lxp_article` WHERE `aid` = 45 LIMIT 1   [ RunTime:0.0004s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0004s ]
SQL: SELECT `tid` FROM `lxp_article_tag` WHERE `aid` = 45  [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0004s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '45'  [ RunTime:0.0003s ]
SQL: SHOW COLUMNS FROM `lxp_category` [ RunTime:0.0004s ]
SQL: SELECT `cid`,`cid`,`cname`,`keywords` FROM `lxp_category` WHERE `cid` = 35  [ RunTime:0.0002s ]
SQL: SELECT * FROM `lxp_category` ORDER BY sort  [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_tag` [ RunTime:0.0005s ]
SQL: SELECT * FROM `lxp_tag`  [ RunTime:0.0001s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0004s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 21 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 22 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 23 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 24 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 25 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 26 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 27 LIMIT 1   [ RunTime:0.0002s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000084s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000110s ]
NOTIC: [2] in_array() expects parameter 2 to be array, null given /www/wwwroot/blog/Runtime/Cache/Admin/01a4a8e4f49a4ee89a7225c0edf83163.php 第 6 行.
NOTIC: [2] in_array() expects parameter 2 to be array, null given /www/wwwroot/blog/Runtime/Cache/Admin/01a4a8e4f49a4ee89a7225c0edf83163.php 第 6 行.
NOTIC: [2] in_array() expects parameter 2 to be array, null given /www/wwwroot/blog/Runtime/Cache/Admin/01a4a8e4f49a4ee89a7225c0edf83163.php 第 6 行.
NOTIC: [2] in_array() expects parameter 2 to be array, null given /www/wwwroot/blog/Runtime/Cache/Admin/01a4a8e4f49a4ee89a7225c0edf83163.php 第 6 行.
NOTIC: [2] in_array() expects parameter 2 to be array, null given /www/wwwroot/blog/Runtime/Cache/Admin/01a4a8e4f49a4ee89a7225c0edf83163.php 第 6 行.
NOTIC: [2] in_array() expects parameter 2 to be array, null given /www/wwwroot/blog/Runtime/Cache/Admin/01a4a8e4f49a4ee89a7225c0edf83163.php 第 6 行.
NOTIC: [2] in_array() expects parameter 2 to be array, null given /www/wwwroot/blog/Runtime/Cache/Admin/01a4a8e4f49a4ee89a7225c0edf83163.php 第 6 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.005956s ]
INFO: [ view_parse ] --END-- [ RunTime:0.005977s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000091s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000109s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000323s ]
INFO: [ app_end ] --END-- [ RunTime:0.000347s ]

[ 2019-01-11T14:42:45+08:00 ] 223.72.56.102 /Admin/Article/edit/aid/45
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000214s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000287s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000326s ]
SQL: SHOW COLUMNS FROM `lxp_article` [ RunTime:0.0008s ]
SQL: UPDATE `lxp_article` SET `aid`='45',`cid`='35',`title`='Redis 简介',`author`='鹿晓鹏',`keywords`='Redis常用命令 1 连接操作命令  quit：关闭连接（connection） auth：简单密码认证 help cmd： 查看cmd帮助，例如：help quit 2 持久化  save：将数据同步保存到磁盘 bgsave：将数据异步保存到磁盘 lastsave：返回上次成功将数据保存到磁盘的Unix时戳 shutdown：将数据同步保存到磁盘，然后关闭服务 3 远程服务控制  info：提供服务器的信息和统计 monitor：实时转储收到的请求 slaveof：改变复制策略设置 config：在运行时配置Redis服务器 4 对key操作的命令  exists(key)：确认一个key是否存在 del(key)：删除一个key type(key)：返回值的类型 keys(pattern)：返回满足给定pattern的所有key randomkey：随机返回key空间的一个 keyrename(oldname, newname)：重命名key dbsize：返回当前数据库中key的数目 expire：设定一个key的活动时间（s） ttl：获得一个key的活动时间 select(index)：按索引查询 move(key, dbindex)：移动当前数据库中的key到dbindex数据库 flushdb：删除当前选择数据库中的所有key flushall：删除所有数据库中的所有key 5 String  set(key, value)：给数据库中名称为key的string赋予值value get(key)：返回数据库中名称为key的string的value getset(key, value)：给名称为key的string赋予上一次的value mget(key1, key2,…, key N)：返回库中多个string的value setnx(key, value)：添加string，名称为key，值为value setex(key, time, value)：向库中添加string，设定过期时间time mset(key N, value N)：批量设置多个string的值 msetnx(key N, value N)：如果所有名称为key i的string都不存在 incr(key)：名称为key的string增1操作 incrby(key, integer)：名称为key的string增加integer decr(key)：名称为key的string减1操作 decrby(key, integer)：名称为key的string减少integer append(key, value)：名称为key的string的值附加value substr(key, start, end)：返回名称为key的string的value的子串 6 List  rpush(key, value)：在名称为key的list尾添加一个值为value的元素 lpush(key, value)：在名称为key的list头添加一个值为value的 元素 llen(key)：返回名称为key的list的长度 lrange(key, start, end)：返回名称为key的list中start至end之间的元素 ltrim(key, start, end)：截取名称为key的list lindex(key, index)：返回名称为key的list中index位置的元素 lset(key, index, value)：给名称为key的list中index位置的元素赋值 lrem(key, count, value)：删除count个key的list中值为value的元素 lpop(key)：返回并删除名称为key的list中的首元素 rpop(key)：返回并删除名称为key的list中的尾元素 blpop(key1, key2,… key N, timeout)：lpop命令的block版本。 brpop(key1, key2,… key N, timeout)：rpop的block版本。 rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部 7 Set  sadd(key, member)：向名称为key的set中添加元素member srem(key, member) ：删除名称为key的set中的元素member spop(key) ：随机返回并删除名称为key的set中一个元素 smove(srckey, dstkey, member) ：移到集合元素 scard(key) ：返回名称为key的set的基数 sismember(key, member) ：member是否是名称为key的set的元素 sinter(key1, key2,…key N) ：求交集 sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合 sunion(key1, (keys)) ：求并集 sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合 sdiff(key1, (keys)) ：求差集 sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合 smembers(key) ：返回名称为key的set的所有元素 srandmember(key) ：随机返回名称为key的set的一个元素 8 Hash  hset(key, field, value)：向名称为key的hash中添加元素field hget(key, field)：返回名称为key的hash中field对应的value hmget(key, (fields))：返回名称为key的hash中field i对应的value hmset(key, (fields))：向名称为key的hash中添加元素field hincrby(key, field, integer)：将名称为key的hash中field的value增加integer hexists(key, field)：名称为key的hash中是否存在键为field的域 hdel(key, field)：删除名称为key的hash中键为field的域 hlen(key)：返回名称为key的hash中元素个数 hkeys(key)：返回名称为key的hash中所有键 hvals(key)：返回名称为key的hash中所有键对应的value hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value ---------------------  作者：朱小厮  来源：CSDN  原文：https://blog.csdn.net/u013256816/article/details/51120023  版权声明：本文为博主原创文章，转载请附上博文链接！',`description`='Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。Redis 与其他 key – value 缓存产品有以下三个特点：Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。Redis支持数据的备份，即mas',`is_original`='1',`is_top`='0',`is_show`='1',`content`='&lt;p style=&quot;border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 14px; font-family: &amp;quot;Microsoft YaHei&amp;quot;, 宋体, &amp;quot;Myriad Pro&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。&lt;br/&gt;Redis 与其他 key – value 缓存产品有以下三个特点：&lt;/p&gt;&lt;p&gt;Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。&lt;/p&gt;&lt;p&gt;Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。&lt;/p&gt;&lt;p&gt;Redis支持数据的备份，即master-slave模式的数据备份。&lt;/p&gt;&lt;h2 style=&quot;border: 0px; margin: -9px 0px 20px; padding: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-weight: normal; font-stretch: normal; font-size: 24px; line-height: 36px; font-family: &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Myriad Pro&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;Redis 优势&lt;/h2&gt;&lt;p&gt;性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。&lt;/p&gt;&lt;p&gt;丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。&lt;/p&gt;&lt;p&gt;原子 – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。&lt;/p&gt;&lt;p&gt;丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。&lt;/p&gt;&lt;h2 style=&quot;border: 0px; margin: -9px 0px 20px; padding: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-weight: normal; font-stretch: normal; font-size: 24px; line-height: 36px; font-family: &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Myriad Pro&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;Redis与其他key-value存储有什么不同？&lt;/h2&gt;&lt;p&gt;Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。&lt;/p&gt;&lt;p&gt;Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，应为数据量不能大于硬件内存。在内存数据库方面的另一个优点是， 相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。 同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。&lt;/p&gt;&lt;p&gt;Redis常用命令&lt;/p&gt;&lt;p&gt;1 连接操作命令&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;quit：关闭连接（connection）&lt;/p&gt;&lt;p&gt;auth：简单密码认证&lt;/p&gt;&lt;p&gt;help cmd： 查看cmd帮助，例如：help quit&lt;/p&gt;&lt;p&gt;2 持久化&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;save：将数据同步保存到磁盘&lt;/p&gt;&lt;p&gt;bgsave：将数据异步保存到磁盘&lt;/p&gt;&lt;p&gt;lastsave：返回上次成功将数据保存到磁盘的Unix时戳&lt;/p&gt;&lt;p&gt;shutdown：将数据同步保存到磁盘，然后关闭服务&lt;/p&gt;&lt;p&gt;3 远程服务控制&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;info：提供服务器的信息和统计&lt;/p&gt;&lt;p&gt;monitor：实时转储收到的请求&lt;/p&gt;&lt;p&gt;slaveof：改变复制策略设置&lt;/p&gt;&lt;p&gt;config：在运行时配置Redis服务器&lt;/p&gt;&lt;p&gt;4 对key操作的命令&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;exists(key)：确认一个key是否存在&lt;/p&gt;&lt;p&gt;del(key)：删除一个key&lt;/p&gt;&lt;p&gt;type(key)：返回值的类型&lt;/p&gt;&lt;p&gt;keys(pattern)：返回满足给定pattern的所有key&lt;/p&gt;&lt;p&gt;randomkey：随机返回key空间的一个&lt;/p&gt;&lt;p&gt;keyrename(oldname, newname)：重命名key&lt;/p&gt;&lt;p&gt;dbsize：返回当前数据库中key的数目&lt;/p&gt;&lt;p&gt;expire：设定一个key的活动时间（s）&lt;/p&gt;&lt;p&gt;ttl：获得一个key的活动时间&lt;/p&gt;&lt;p&gt;select(index)：按索引查询&lt;/p&gt;&lt;p&gt;move(key, dbindex)：移动当前数据库中的key到dbindex数据库&lt;/p&gt;&lt;p&gt;flushdb：删除当前选择数据库中的所有key&lt;/p&gt;&lt;p&gt;flushall：删除所有数据库中的所有key&lt;/p&gt;&lt;p&gt;5 String&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;set(key, value)：给数据库中名称为key的string赋予值value&lt;/p&gt;&lt;p&gt;get(key)：返回数据库中名称为key的string的value&lt;/p&gt;&lt;p&gt;getset(key, value)：给名称为key的string赋予上一次的value&lt;/p&gt;&lt;p&gt;mget(key1, key2,…, key N)：返回库中多个string的value&lt;/p&gt;&lt;p&gt;setnx(key, value)：添加string，名称为key，值为value&lt;/p&gt;&lt;p&gt;setex(key, time, value)：向库中添加string，设定过期时间time&lt;/p&gt;&lt;p&gt;mset(key N, value N)：批量设置多个string的值&lt;/p&gt;&lt;p&gt;msetnx(key N, value N)：如果所有名称为key i的string都不存在&lt;/p&gt;&lt;p&gt;incr(key)：名称为key的string增1操作&lt;/p&gt;&lt;p&gt;incrby(key, integer)：名称为key的string增加integer&lt;/p&gt;&lt;p&gt;decr(key)：名称为key的string减1操作&lt;/p&gt;&lt;p&gt;decrby(key, integer)：名称为key的string减少integer&lt;/p&gt;&lt;p&gt;append(key, value)：名称为key的string的值附加value&lt;/p&gt;&lt;p&gt;substr(key, start, end)：返回名称为key的string的value的子串&lt;/p&gt;&lt;p&gt;6 List&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;rpush(key, value)：在名称为key的list尾添加一个值为value的元素&lt;/p&gt;&lt;p&gt;lpush(key, value)：在名称为key的list头添加一个值为value的 元素&lt;/p&gt;&lt;p&gt;llen(key)：返回名称为key的list的长度&lt;/p&gt;&lt;p&gt;lrange(key, start, end)：返回名称为key的list中start至end之间的元素&lt;/p&gt;&lt;p&gt;ltrim(key, start, end)：截取名称为key的list&lt;/p&gt;&lt;p&gt;lindex(key, index)：返回名称为key的list中index位置的元素&lt;/p&gt;&lt;p&gt;lset(key, index, value)：给名称为key的list中index位置的元素赋值&lt;/p&gt;&lt;p&gt;lrem(key, count, value)：删除count个key的list中值为value的元素&lt;/p&gt;&lt;p&gt;lpop(key)：返回并删除名称为key的list中的首元素&lt;/p&gt;&lt;p&gt;rpop(key)：返回并删除名称为key的list中的尾元素&lt;/p&gt;&lt;p&gt;blpop(key1, key2,… key N, timeout)：lpop命令的block版本。&lt;/p&gt;&lt;p&gt;brpop(key1, key2,… key N, timeout)：rpop的block版本。&lt;/p&gt;&lt;p&gt;rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部&lt;/p&gt;&lt;p&gt;7 Set&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;sadd(key, member)：向名称为key的set中添加元素member&lt;/p&gt;&lt;p&gt;srem(key, member) ：删除名称为key的set中的元素member&lt;/p&gt;&lt;p&gt;spop(key) ：随机返回并删除名称为key的set中一个元素&lt;/p&gt;&lt;p&gt;smove(srckey, dstkey, member) ：移到集合元素&lt;/p&gt;&lt;p&gt;scard(key) ：返回名称为key的set的基数&lt;/p&gt;&lt;p&gt;sismember(key, member) ：member是否是名称为key的set的元素&lt;/p&gt;&lt;p&gt;sinter(key1, key2,…key N) ：求交集&lt;/p&gt;&lt;p&gt;sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合&lt;/p&gt;&lt;p&gt;sunion(key1, (keys)) ：求并集&lt;/p&gt;&lt;p&gt;sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合&lt;/p&gt;&lt;p&gt;sdiff(key1, (keys)) ：求差集&lt;/p&gt;&lt;p&gt;sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合&lt;/p&gt;&lt;p&gt;smembers(key) ：返回名称为key的set的所有元素&lt;/p&gt;&lt;p&gt;srandmember(key) ：随机返回名称为key的set的一个元素&lt;/p&gt;&lt;p&gt;8 Hash&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;hset(key, field, value)：向名称为key的hash中添加元素field&lt;/p&gt;&lt;p&gt;hget(key, field)：返回名称为key的hash中field对应的value&lt;/p&gt;&lt;p&gt;hmget(key, (fields))：返回名称为key的hash中field i对应的value&lt;/p&gt;&lt;p&gt;hmset(key, (fields))：向名称为key的hash中添加元素field&lt;/p&gt;&lt;p&gt;hincrby(key, field, integer)：将名称为key的hash中field的value增加integer&lt;/p&gt;&lt;p&gt;hexists(key, field)：名称为key的hash中是否存在键为field的域&lt;/p&gt;&lt;p&gt;hdel(key, field)：删除名称为key的hash中键为field的域&lt;/p&gt;&lt;p&gt;hlen(key)：返回名称为key的hash中元素个数&lt;/p&gt;&lt;p&gt;hkeys(key)：返回名称为key的hash中所有键&lt;/p&gt;&lt;p&gt;hvals(key)：返回名称为key的hash中所有键对应的value&lt;/p&gt;&lt;p&gt;hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value&lt;/p&gt;' WHERE `aid` = 45 [ RunTime:0.0052s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0006s ]
SQL: DELETE FROM `lxp_article_tag` WHERE `aid` = 45 [ RunTime:0.0008s ]
SQL: INSERT INTO `lxp_article_tag` (`aid`,`tid`) VALUES ('45','27') [ RunTime:0.0029s ]
SQL: SHOW COLUMNS FROM `lxp_article_pic` [ RunTime:0.0011s ]
SQL: DELETE FROM `lxp_article_pic` WHERE `aid` = 45 [ RunTime:0.0013s ]
SQL: INSERT INTO `lxp_article_pic` (`aid`,`path`) VALUES ('45','/Upload/image/ueditor/redis.jpg') [ RunTime:0.0024s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000026s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.003336s ]
INFO: [ view_parse ] --END-- [ RunTime:0.003360s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000115s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000135s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000338s ]
INFO: [ app_end ] --END-- [ RunTime:0.000358s ]

[ 2019-01-11T14:42:47+08:00 ] 223.72.56.102 /Admin/Article/edit/aid/45
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000202s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000281s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000307s ]
SQL: SHOW COLUMNS FROM `lxp_article` [ RunTime:0.0007s ]
SQL: SELECT * FROM `lxp_article` WHERE `aid` = 45 LIMIT 1   [ RunTime:0.0003s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0004s ]
SQL: SELECT `tid` FROM `lxp_article_tag` WHERE `aid` = 45  [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0004s ]
SQL: SELECT * FROM `lxp_article_tag` INNER JOIN lxp_tag ON lxp_article_tag.tid=lxp_tag.tid  WHERE `aid` = '45'  [ RunTime:0.0017s ]
SQL: SHOW COLUMNS FROM `lxp_category` [ RunTime:0.0005s ]
SQL: SELECT `cid`,`cid`,`cname`,`keywords` FROM `lxp_category` WHERE `cid` = 35  [ RunTime:0.0017s ]
SQL: SELECT * FROM `lxp_category` ORDER BY sort  [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `lxp_tag` [ RunTime:0.0004s ]
SQL: SELECT * FROM `lxp_tag`  [ RunTime:0.0001s ]
SQL: SHOW COLUMNS FROM `lxp_article_tag` [ RunTime:0.0004s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 21 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 22 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 23 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 24 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 25 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 26 LIMIT 1   [ RunTime:0.0002s ]
SQL: SELECT COUNT(*) AS tp_count FROM `lxp_article_tag` WHERE `tid` = 27 LIMIT 1   [ RunTime:0.0002s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000059s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000082s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.005106s ]
INFO: [ view_parse ] --END-- [ RunTime:0.005136s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000105s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000126s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000305s ]
INFO: [ app_end ] --END-- [ RunTime:0.000330s ]

